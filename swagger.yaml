openapi: 3.0.0
servers:
  - url: https://easyhour.app/easyhour/api/v2
    description: Production server (uses live data)
#  - url: https://dev.easyhour.app/easyhour/api/v2
#    description: Sandbox server (uses test data)
info:
  description: EasyHour public APIs
  version: "1.0.0"
  title: EasyHour public APIs
  contact:
    email: support@easyhour.app
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
paths:
  /report.json:
    get:
      summary: Get report in JSON format
      operationId: jsonReport
      tags: 
        - Reports
      parameters:
        - in: query
          name: reportTypes
          description: A list of report types
          required: false
          schema:
            type: string
            enum:
              - Worklogs
              - TaskEstimates
              - Clocks
              - Overtime
              - Bookings
              - Leaves
              - SmartWorkings
              - Trips
              - Activities
              - Timers
        - in: query
          name: startDate
          description: The start date (yyyy-mm-dd)
          required: true
          schema:
            type: string
            format: date
        - in: query
          name: endDate
          description: The end date (yyyy-mm-dd)
          required: true
          schema:
            type: string
            format: date
        - in: query
          name: states
          description: A list of approval states (only applicable for Leaves, Smartworkings and Trips)
          required: false
          schema:
            type: string
            enum:
              - approved
              - refused
              - pending
      responses:
        '200':
          description: Get report entries matching given criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReportItem'
  /users.json:
    get:
      summary: Get user list in JSON format
      operationId: jsonUsers
      tags: 
        - Users
      parameters:
        - in: query
          name: onlyActive
          description: True to get only active users, false to get all of them
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Get the list of company employees (users)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserItem'
  /report.xlsx:
    get:
      summary: Get report in XLSX format
      operationId: xlsxReport
      tags: 
        - Reports
      parameters:
        - in: query
          name: reportTypes
          description: A list of report types
          required: false
          schema:
            type: string
            enum:
              - Worklogs
              - TaskEstimates
              - Clocks
              - Overtime
              - Bookings
              - Leaves
              - SmartWorkings
              - Trips
              - Activities
              - Timers
        - in: query
          name: startDate
          description: The start date (yyyy-mm-dd)
          required: true
          schema:
            type: string
            format: date
        - in: query
          name: endDate
          description: The end date (yyyy-mm-dd)
          required: true
          schema:
            type: string
            format: date
        - in: query
          name: states
          description: A list of approval states (only applicable for Leaves, Smartworkings and Trips)
          required: false
          schema:
            type: string
            enum:
              - approved
              - refused
              - pending            
      responses:
        '200':
          description: Get report entries matching given criteria
          content:
            application/vnd.ms-excel:
              schema:
                type: string
                format: binary
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
  schemas:
    ReportItem:
      type: object
      required:
        - id
        - data
      properties:
        id:
          type: integer
          example: 12345
        data:
          type: string
          format: date
          example: '2016-08-29'
        dataFine:
          type: string
          format: date
        tipo: 
          type: string
          description: "Type of event, one of"
          enum:
            - Ferie
            - Permesso
            - Malattia 
            - Attivita
            - Trasferta
            - Worklog
            - Prenotazione
        codiceCliente: 
          type: string
        nomeCliente: 
          type: string
        cliente: 
          $ref: '#/components/schemas/Client'
        loginDipendente: 
          type: string
        nomeDipendente: 
          type: string
        durata: 
          type: integer
          format: int32
          description: "Event duration (in minutes) taking into account user's and company's shifts"
        duration: 
          type: string
          description: "Event duration (in duration format) taking into account user's and company's shifts"
          example: 'PT4H'
        descrizione: 
          type: string
        oraInizio: 
          type: string
          format: nullable
          example: '09:00'
        oraFine: 
          type: string
          format: nullable
          example: '13:00'
        user: 
          $ref: '#/components/schemas/User'
        userId: 
          type: integer
          format: int32
        email: 
          type: string
          format: nullable
          description: "Guest e-mail (for coworkings)"
        phone: 
          type: string
          format: nullable
          description: "Guest phone (for coworkings)"
    Client:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
        nome:
          type: string
        codice:
          type: string
        descrizione:
          type: string
        attivo:
          type: boolean
        managers:
          type: array
          items:
            $ref: '#/components/schemas/User'
    User:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
        login:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        fullName:
          type: string
        email:
          type: string
        activated:
          type: boolean
        langKey:
          type: string
          example: "it"
    UserItem:
      type: object
      properties:
        id:
          type: integer
          example: 12345
        email:
          type: string
        name:
          type: string
        surname:
          type: string
        active:
          type: boolean
        lang:
          type: string
          example: "it"
        assignment:
          type: string
        department:
          type: string
        dateOfBirth:
          type: string
          format: date
        dateOfHire:
          type: string
          format: date
        workShifts:
          type: array
          items:
            $ref: '#/components/schemas/WorkShiftItem'
    WorkShiftItem:
      type: object
      properties:
        dayOfWeek:
          type: integer
        workingDay:
          type: boolean
        t1Start:
          type: integer
          description: Start of work shift 1 in seconds from midnight, e.g. 32400 -> 9:00
          example: 32400
        t1Finish:
          type: integer
          description: End of work shift 1 in seconds from midnight, e.g. 46800 -> 13:00
          example: 46800
        t2Start:
          type: integer
        t2Finish:
          type: integer
        t3Start:
          type: integer
        t3Finish:
          type: integer
        t4Start:
          type: integer
        t4Finish:
          type: integer
security:
  - ApiKeyAuth: []
